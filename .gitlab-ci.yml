image: go1com/ci-nodejs:node10

stages:
  - build
  - test
  - visual-test
  - release
  - npm-release

build:
  stage: build
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
  script:
    - yarn config set no-progress
    - yarn install --silent
    - yarn "react:docs"
    # Use concurrently to run job, also yarn react:docs was duplicated
    - yarn "ci:build"
    # - yarn "npm:build"
    # - yarn "docs:build"
    # - yarn "storybook:build"
  artifacts:
    paths:
      - node_modules
      - build
      - dist
      - dist_storybook
    expire_in: 6h
  except:
    - "tags"
  only:
    - master

build-dev:
  stage: build
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
  script:
    - yarn config set no-progress
    - yarn install --frozen-lockfile
    - yarn "npm:build"
  artifacts:
    paths:
      - node_modules
      - build
      - dist
    expire_in: 6h
  only: ["branches"]
  except:
    - master

test:linting:
  stage: test
  script: yarn run tslint
  except:
    - master
    - tags

test:unit:
  stage: test
  needs: []
  script:
    - yarn config set no-progress
    - yarn install --frozen-lockfile --silent
    - yarn test --no-cache --coverage
  artifacts:
    paths:
      - coverage
    expire_in: 1h
  except:
    - "tags"

visual-test:happo:
  stage: visual-test
  dependencies:
  - test:linting
  allow_failure: true
  before_script:
    - export PREVIOUS_SHA=`git rev-parse origin/master`
    - export CURRENT_SHA=$CI_COMMIT_SHA
    - export CHANGE_URL=$CI_PAGES_URL
  script:
    - DIFF_REVIEW=$(node ./scripts/check-screenshot-result.js)
    - if [ "$DIFF_REVIEW" != "accept" ]; then
    - yarn config set no-progress
    - yarn install --silent
    - yarn react:docs && node ./.storybook/generate-props-file.js
    - yarn run happo-ci
    # Check for EXIT_CODE env
    - NPM_BIN=$(yarn bin)
    - SUMMARY=$("$NPM_BIN"/happo compare "$PREVIOUS_SHA" "$CURRENT_SHA");
    - if [ "$EXIT_CODE" == "113" ]; then exit 1; fi; fi
  except:
  - master
  - tags

pages: # NEVER rename this. I must apparently be exactly this to work
  stage: release
  dependencies:
    - build
  script:
    - rm -rf public
    - mkdir public
    - rm -rf public/storybook
    - mkdir public/storybook
    - cp -r dist/* public/
    - cp -r dist_storybook/* public/storybook/

  artifacts:
    paths:
      - public # mandatory, other folder won't work
  except:
    - "tags"
  only:
    - master

release:npm:
  stage: npm-release
  dependencies:
    - build
  before_script:
    - 'which ssh-agent || ( apk add -uUv openssh-client)'
    - eval $(ssh-agent -s)
    - echo "$GO1D_PRIVATE_SSH_KEY" |  base64 --decode | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan code.go1.com.au >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - git clone git@code.go1.com.au:${CI_PROJECT_PATH}.git
    - cp -r build ${CI_PROJECT_NAME}/
    - cd ${CI_PROJECT_NAME}
    - git config user.name "$GITLAB_USER_NAME"
    - git config user.email "$GITLAB_USER_EMAIL"
    - git checkout $CI_COMMIT_REF_NAME
    - git branch --set-upstream-to origin/$CI_COMMIT_REF_NAME
    - PACKAGE_VERSION=$(npm version patch -m "[NPM-CI] Publishing Version %s to NPM [skip ci]")
    - git push origin
    - git push origin $PACKAGE_VERSION
    - npm config set scope go1d --global
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - rm readme.md
    - mv npm-readme.md readme.md
    - npm publish --access public
    - NPM_BIN=$(yarn bin)
    - MASTER_SHA=$(git rev-parse origin/master)
    - if ! "$NPM_BIN"/happo has-report "$MASTER_SHA"; then
    - yarn config set no-progress
    - yarn install --silent
    - yarn react:docs && node ./.storybook/generate-props-file.js
    - yarn happo run $MASTER_SHA; fi
  except:
    - "tags"
  only:
    - master

npm-release-changeset-test:
  stage: test
  dependencies:
    - build
  before_script:
    - 'which ssh-agent || ( apk add -uUv openssh-client)'
    - eval $(ssh-agent -s)
    - echo "$GO1D_PRIVATE_SSH_KEY" |  base64 --decode | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan code.go1.com.au >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - git clone git@code.go1.com.au:${CI_PROJECT_PATH}.git # This should fetch all Git history so that Changesets can generate changelogs with the correct commits
    - cp -r build ${CI_PROJECT_NAME}/
    - cd ${CI_PROJECT_NAME}
    - git config user.name "$GITLAB_USER_NAME"
    - git config user.email "$GITLAB_USER_EMAIL"
    - git checkout $CI_COMMIT_REF_NAME
    - git branch --set-upstream-to origin/$CI_COMMIT_REF_NAME
    - npm config set scope go1d --global
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - yarn install --silent
    - yarn changeset status || yarn changeset add --empty
    - yarn changeset version
    - git status
    - git add package.json .changeset/ CHANGELOG.md
    - git status
    - git commit -m "[NPM-CI] Version packages [skip ci]" # [skip ci] prevents infinite loop
    # - yarn changeset publish # creates a git tag, and must be preceded by the version commit
    - git tag -n
    - echo "git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git HEAD:${CI_COMMIT_REF_NAME}" # TODO: this is a test to be deleted
    # - git push -o ci-skip git@${CI_SERVER_HOST}:${CI_PROJECT_PATH}.git HEAD:${CI_COMMIT_REF_NAME} --follow-tags
  except:
    - "tags"
    - master
  allow_failure: true # TODO: This is for testing only.
