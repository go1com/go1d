image: go1com/ci-nodejs:node8

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - release

build:
  stage: build
  tags: ["aws"]
  cache:
    paths: [node_modules]
    key: "$CI_PROJECT_ID"
  script:
    - yarn install
    - yarn tsc
    - yarn generate-proptypes
    - yarn x0 build docs
  artifacts:
    paths:
      - node_modules
      - build
      - dist
    expire_in: 6h
  only: ["branches"]

test:linting:
  stage: test
  tags: ["aws"]
  script: yarn tslint


release:pages:
  stage: release
  tags: ["aws"]
  script:
    - mkdir public
    - cp -r dist/* public/
  artifacts:
    paths:
      - public # mandatory, other folder won't work
  except:
    - $CI_COMMIT_MESSAGE =~ /\[npm release\]/
  # only:
  #   - master # or dev, the branch you want to publish
    - node_modules/
test:unit:
  stage: test
  tags: ["aws"]
  script:
    - yarn install
    - yarn test --coverage --runInBand
  artifacts:
    paths:
      - coverage
    expire_in: 1h
  except:
    - "tags"


release:npm:
  stage: release
  tags: ["aws"]
  before_script:
    - 'which ssh-agent || ( apk add -uUv openssh-client)'
    - eval $(ssh-agent -s)
    - echo "$GO1D_PRIVATE_SSH_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan code.go1.com.au >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - git clone git@code.go1.com.au:apps/${CI_PROJECT_PATH}.git
    - cd ${CI_PROJECT_NAME}
    - git config user.name "$GITLAB_USER_NAME"
    - git config user.email "$GITLAB_USER_EMAIL"
    - git checkout origin/$CI_COMMIT_REF_NAME
    - git branch --set-upstream-to origin/$CI_COMMIT_REF_NAME
    - npm version patch -m "[npm release] $CI_COMMIT_MESSAGE"
    - git push
  except:
    - $CI_COMMIT_MESSAGE =~ /\[npm release\]/
# only:
  #   - master # or dev, the branch you want to publish
